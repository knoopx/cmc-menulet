name: "main"

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - uses: actions/cache@v1
      id: electron-builder-cache
      with:
        path: ~/.cache/electron-builder/
        key: ${{ runner.os }}-electron-builder-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-electron-builder-

    - name: prepare
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        sudo snap install hub --classic
        sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install -y wine32 wine-stable

    - name: build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        yarn install
        npx standard-version
        yarn electron:release:all
        git push --follow-tags origin master

        assets=()
        tag=$(git describe --tags --abbrev=0)
        for f in release/CoinMarketCap*; do [ -f "$f" ] && assets+=(-a "$f"); done
        hub release create $tag -m "Release $tag" "${assets[@]}"

        git fetch --no-tags --prune --depth=1 origin gh-pages
        git worktree add dist/web gh-pages
        rm -rf dist/web/**/*
        yarn web:compile
        cd dist/web
        git add -f .
        git commit -m "$tag"
        git push
